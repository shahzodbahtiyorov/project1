import osimport timeimport requestsimport jsonfrom dotenv import dotenv_valuesfrom io import StringIOfrom datetime import datetimefrom requests.auth import HTTPBasicAuthfrom super_app import settings"""P2P"""token = settings.dotenv_config.get('GW_TOKEN')url = settings.dotenv_config.get('GW_URL')"""PAYNET"""basic_token = settings.dotenv_config.get('PAYNET_TOKEN')basic_url = settings.dotenv_config.get('PAYNET_URL')def basic_fire(payload):    payload = json.dumps(payload)    headers = {        'Authorization': f'Bearer {basic_token}',        'Content-Type': 'application/json'    }    response = requests.post(basic_url, headers=headers, data=payload)    return response.json()def fire(payload):    payload = json.dumps(payload)    headers = {        'Authorization': f'Bearer {token}',        'Content-Type': 'application/json'    }    response = requests.post(url, headers=headers, data=payload)    print("**********UNIGATE*********")    print("REQUEST: ", payload)    print("RESPONSE: ", response.content)    print("STATUS: ", response.status_code)    print("**********UNIGATE END*********")    return response.json()url_sms = settings.dotenv_config.get('SMS_URL')login = settings.dotenv_config.get('LOGIN_SMS')password =settings.dotenv_config.get('PASSWORD_SMS')def send_sms(phone, text):    id_ = round(datetime.now().timestamp() * (10 ** 6))    payload = json.dumps({        "messages": [            {                "recipient": phone,                "message-id": f"{id_}",                "sms": {                    "originator": "3700",                    "content": {                        "text": text                    }                }            }        ]    })    headers = {        'Content-Type': 'application/json'    }    try:        response = requests.post(url_sms, headers=headers, auth=HTTPBasicAuth(login, password),                                 data=payload)        print(f"Request: {payload}\nResponse: {response.content}")        return {"message": response.content.decode(), "status": True}    except:        print('sssss')