import uuidfrom django.db import modelsfrom django.db.models.signals import post_savefrom django.dispatch import receiverfrom super_app import settingsclass  CardModel(models.Model):    CARD_TYPE_CHOICES = (        ('physical', 'physical'),        ('virtual', 'virtual')    )    owner = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True,                              related_name="cards")    card_number = models.CharField(max_length=255)    expire = models.CharField(max_length=255)    card_uuid = models.UUIDField(unique=True, blank=True, null=True)    type = models.CharField(max_length=100, choices=CARD_TYPE_CHOICES, default="physical")    active = models.BooleanField(default=False)    balance = models.IntegerField(default=0)    mask = models.CharField(max_length=255, blank=True, null=True)    bank = models.CharField(max_length=255, blank=True, null=True)    card_owner_name = models.CharField(max_length=255, blank=True, null=True)    card_name = models.CharField(max_length=255, blank=True, null=True)    pc_type = models.IntegerField(default=0,blank=True, null=True)    ref_id =models.CharField(max_length=255, blank=True, null=True)    blocked = models.BooleanField(default=True)    def __str__(self):        return str(self.card_number)    class Meta:        unique_together = ('owner', 'card_number')@receiver(post_save, sender=CardModel)def add_uuid(sender, instance=None, created=False, **kwargs):    if created:        instance.card_uuid = str(uuid.uuid4())class BalanceModel(models.Model):    balance = models.IntegerField(default=0)    card = models.ForeignKey(CardModel, on_delete=models.SET_NULL, blank=True, null=True)    def __str__(self):        return self.balanceclass ReceiverCardModel(models.Model):    owner = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True,                              related_name="receiver_cards")    card_name = models.CharField(max_length=255, blank=True, null=True)    card_number = models.CharField(max_length=255, blank=True, null=True)    card_mask = models.CharField(max_length=255, blank=True, null=True)    pc_type = models.IntegerField(default=0,blank=True, null=True)    type = models.IntegerField(default=0)    def __str__(self):        return f'{self.card_name} {self.card_number}'