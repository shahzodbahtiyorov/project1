import datetimefrom django.db import modelsfrom django.utils.timezone import utcfrom passlib.hash import pbkdf2_sha256from django.utils import timezonefrom apps.accounts.models import Accountclass OtpModel(models.Model):    user = models.ForeignKey(Account, on_delete=models.CASCADE)    phone_number = models.CharField(max_length=500, null=True, blank=True)    otp_token = models.CharField(max_length=300, null=True, blank=True)    lang = models.CharField(max_length=50, null=True, blank=True)    tried = models.IntegerField(null=True, blank=True, default=0)    expire = models.BooleanField('Expire',default=False)    created_at = models.DateTimeField(auto_now_add=True)    updated_at = models.DateTimeField(auto_now=True)    def __str__(self):        return self.otp_token    def is_expired(self, expiration_time=120):        """Check if OTP is expired based on expiration_time in seconds"""        return (timezone.now() - self.created_at).total_seconds() > expiration_time    # @property    # def is_active(self):    #     now = datetime.datetime.utcnow().replace(tzinfo=utc)    #     timediff = now - self.created_at    #     timediff = timediff.total_seconds().__round__()    #     return True if timediff < 180 else False    #    # def __str__(self):    #     return str(self.phone_number)    #    # def verify_otp(self, raw_otp):    #     return pbkdf2_sha256.verify(raw_otp, self.otp)